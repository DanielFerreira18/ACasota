@page "/TransactionForm/{id}"
@using System.Collections
@using ACasotaBlazorServer.Data
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@inject UserManager<ApplicationUser> _userManager
@inject NavigationManager nav
@inject IDbContextFactory<DataContext> contextDb
@inject IWebHostEnvironment enviroment
@inject IJSRuntime JSRuntime

@attribute [Authorize]

<PageTitle>Perfil</PageTitle>

<AuthorizeView>
    <Authorized>
        @if (render)
        {
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-3">
                <div class="d-block mb-4 mb-md-0">
                    <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                        <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                            <li class="breadcrumb-item">
                                <a href="/">
                                    <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                                </a>
                            </li>
                            <li class="breadcrumb-item"><a href="/">ACasota</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Perfil</li>
                        </ol>
                    </nav>
                    <h2 class="h4">Perfil de Utilizador</h2>
                    <p class="mb-0">Página de especificações e caracteristicas do utilizador</p>
                </div>
            </div>
            <div class="row" id="tableWidth">
                <div class="col-12 col-xl-6">
                    <div class="card card-body border-0 shadow mb-4">
                        <h2 class="h5 mb-4">Informação do Utilizador</h2>
                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <div>
                                    <img class="img-fluid rounded-bottom rounded-top" src="@profileUserPic" alt="Card image cap">
                                </div>
                            </div>
                            <div class="col-md-9 mb-3">
                                <div class="form-group">
                                    <label for="UserFirstName">Primeiro Nome</label>
                                    <label class="form-control" id="UserFirstName">@user_auth.User.FirstName</label>
                                </div>
                                <div class="form-group">
                                    <label for="UserLastName">Apelido</label>
                                    <label class="form-control" id="UserLastName">@user_auth.User.LastName</label>
                                </div>
                            </div>
                        </div>
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserEmail">Email</label>
                                    <label class="form-control" id="UserEmail">@user_auth.User.Email</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserNumber">Numero de Telemóvel</label>
                                    @if (user_auth.User.PhoneNumber == "" || user_auth.User.PhoneNumber == null)
                                    {
                                        <label class="form-control text-danger" id="UserNumber">Não tem numero de telemovel</label>
                                    }
                                    else
                                    {
                                        <label class="form-control" id="UserNumber">@user_auth.User.PhoneNumber</label>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label for="UserCCNumber">Cartão de Cidadão</label>
                                    @if (user_auth.User.CCnumber == "" || user_auth.User.CCnumber == null)
                                    {
                                        <label class="form-control text-danger" id="UserCCNumber">Não tem numero de CC</label>
                                    }
                                    else
                                    {
                                        <label class="form-control" id="UserCCNumber">@user_auth.User.CCnumber</label>
                                    }
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label for="UserNIF">NIF</label>
                                    @if (user_auth.User.Nif == "" || user_auth.User.Nif == null)
                                    {
                                        <label class="form-control text-danger" id="UserNIF">Não tem NIF</label>
                                    }
                                    else
                                    {
                                        <label class="form-control" id="UserNIF">@user_auth.User.Nif</label>
                                    }
                                </div>
                            </div>
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label for="UserSex">Género</label>
                                    @if (@user_auth.User.Sex == "Female")
                                    {
                                        <label class="form-control" id="UserSex">Feminino</label>
                                    }
                                    else
                                    {
                                        <label class="form-control" id="UserSex">Masculino</label>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="UserSex">IBAN</label>
                                @if (@user_auth.User.Iban == "" || user_auth.User.Iban == null)
                                {
                                    <label class="form-control text-danger" id="UserSex">IBAN não especificado</label>
                                }
                                else
                                {
                                    <label class="form-control fw-extrabold" id="UserSex">@user_auth.User.Iban</label>
                                }
                            </div>
                        </div>
                        <h2 class="h5 my-4">Localização</h2>
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label for="UserCCNumber">Morada</label>
                                @if (user_auth.User.Address == "" || user_auth.User.Address == null)
                                {
                                    <label class="form-control text-danger" id="UserCCNumber">Não tem morada especificada</label>
                                }
                                else
                                {
                                    <label class="form-control" id="UserCCNumber">@user_auth.User.Address</label>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label for="UserCCNumber">Cidade</label>
                                    @if (user_auth.User.City == "" || user_auth.User.City == null)
                                    {
                                        <label class="form-control text-danger" id="UserCCNumber">Não tem cidade especificada</label>
                                    }
                                    else
                                    {
                                        <label class="form-control" id="UserCCNumber">@user_auth.User.City</label>
                                    }
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label for="UserNIF">Código Postal</label>
                                    @if (user_auth.User.Zip == "" || user_auth.User.Zip == null)
                                    {
                                        <label class="form-control text-danger" id="UserNIF">Não tem código postal especificado</label>
                                    }
                                    else
                                    {
                                        <label class="form-control" id="UserNIF">@user_auth.User.Zip</label>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 col-xl-6">
                    <div class="card card-body border-0 shadow mb-4">
                        <div class="row">
                            <div class="col-md-12 mb-4">
                                <h2 class="h5 mb-4">Informação da Transação</h2>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label for="UserAddress">Nome da transação</label>
                                            <label class="form-control" id="UserAddress">@user_auth.Name</label>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <label for="DescAnimal">Descrição da transação</label>
                                        <label class="form-control" style="height: 100px;" placeholder="Descrição..." id="DescAnimal" rows="4">@user_auth.Description</label>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="UserHouseType">Tipo de transação</label>
                                            <label class="form-control" id="UserHouseType">@user_auth.Type.Type</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="UserHouseTipology">Montante da transação</label>
                                            <label class="form-control" id="UserHouseTipology">@user_auth.Amount</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="UserHouseType">Data da transação</label>
                                            <label class="form-control" id="UserHouseType">@user_auth.DateTransaction</label>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="UserHouseTipology">Data do pagamento</label>
                                            @if (user_auth.DatePayment == null)
                                            {
                                                <label class="form-control text-danger" id="UserHouseTipology">Transação ainda não foi paga</label>
                                            }
                                            else
                                            {
                                                <label class="form-control" id="UserHouseTipology">@user_auth.DatePayment</label>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (!user_auth.IsPaid)
                            {
                                @if (isOwner)
                                {
                                    <div class="form-group d-flex justify-content-center mb-3">
                                        <div class="col-md-12-custom">
                                            <div class="card card-body border-0 shadow mb-4">
                                                <h2 class="h5 mb-4">Escolha uma prova de pagamento</h2>
                                                <div class="d-flex align-items-center">
                                                    <div class="file-field">
                                                        <div class="d-flex justify-content-xl-center ms-xl-3">
                                                            <div class="d-flex">
                                                                <InputFile OnChange="@LoadFilesProfilePics" accept=".png,.jpg,.jpeg" />
                                                                <div class="d-md-block text-left">
                                                                    <div class="fw-normal text-dark mb-1">Choose Image</div>
                                                                    <div class="text-gray small">JPG or PNG. Max size of 3MB</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            <div class="col-md-12">
                                <div>
                                    <label for="UserHouseTipology">Prova de pagamento</label>
                                </div>
                            </div>
                            <div class="col-md-12 mb-3">
                                <div class="form-group d-flex justify-content-center">
                                    @if (user_auth.DatePayment == null)
                                    {
                                        <span class="fw-bold text-danger">Transação ainda não foi paga</span>
                                    }
                                    else
                                    {
                                        <img class="img-fluid rounded-bottom rounded-top" src="@proofTransactionPic" alt="Card image cap">
                                    }
                                </div>
                            </div>
                            @if (!user_auth.State)
                            {
                                @if (isAdmin)
                                {
                                    <div class="form-group d-flex justify-content-center">
                                        <button type="button" id="bts" class="ms-2 btn large-form-btn btn-success" @onclick="AceptForm">Aprovar Transação</button>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group d-flex justify-content-center my-4">
                                        <span class="fw-bold text-secondary">Transação Pendente</span>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="form-group d-flex justify-content-center my-4">
                                    <span class="fw-bold text-success">Transação Aprovada</span>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Parameter]
    public string? id { get; set; }

    public Transaction user_auth { get; set; } = new Transaction();

    private bool render = false;
    private bool isAdmin = false;
    private bool isOwner = false;

    private bool errorHandling = true;

    //List of extentions
    public List<string> imageExtensions = new List<string> { ".jpg", ".jpeg", ".png" };

    //Bool control extention
    public bool hasExtention = false;

    private string pathRoot = "";
    private string pathPicsRoot = "..\\users_pics";
    private string pathPicsRootTransaction = "";
    private string pathPicsRootUser = "";
    private string profileUserPic = "";
    private string proofTransactionPic = "";
    private long maxFileSize = 1024 * 1024 * 3;

    //Methods
    protected override async Task OnInitializedAsync()
    {
        pathRoot = Path.Combine(enviroment.ContentRootPath, "wwwroot", "users_pics");

        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            using (var ctx = contextDb.CreateDbContext())
            {
                user_auth = await ctx.Transactions.Where(u => u.Id.Equals(this.id)).Include(c => c.User).Include(a => a.Type).FirstAsync();

                if (user_auth.User.UserName.Equals(user.Identity.Name))
                {
                    isOwner = true;
                }

                if (user.IsInRole("Admin") || user.IsInRole("AdminPartner"))
                {
                    isAdmin = true;
                }

                render = true;

                pathPicsRootUser = Path.Combine(pathPicsRoot, user_auth.User.UserName);
                pathPicsRootTransaction = Path.Combine(pathPicsRootUser, "Transactions", user_auth.Id);

                if (user_auth.User.ProfilePic != null && File.Exists(Path.Combine(pathRoot, user_auth.User.UserName, user_auth.User.ProfilePic)))
                {
                    profileUserPic = Path.Combine(pathPicsRootUser, user_auth.User.ProfilePic);
                }
                else
                {
                    profileUserPic = "..\\assets\\img\\userDefault\\userDefault.jpg";
                }

                if (user_auth.ProofPicture != null && File.Exists(Path.Combine(pathRoot, user_auth.User.UserName, "Transactions", user_auth.Id, user_auth.ProofPicture)))
                {
                    proofTransactionPic = Path.Combine(pathPicsRootTransaction, user_auth.ProofPicture);
                }
                else
                {
                    proofTransactionPic = "..\\assets\\img\\userDefault\\userDefault.jpg";
                }
            }
        }
    }

    public void Navs()
    {
        nav.NavigateTo("/TransactionForm/" + user_auth.Id, true);
    }

    public async Task LoadFilesProfilePics(InputFileChangeEventArgs e)
    {
        foreach (var extention in imageExtensions)
        {
            if (Path.GetExtension(e.File.Name).ToLower().Contains(extention))
            {
                hasExtention = true;
                break;
            }
        }

        if (!hasExtention)
        {
            return;
        }

        string newFileName = Path.ChangeExtension(Path.GetRandomFileName(), Path.GetExtension(e.File.Name));

        string pathUser = Path.Combine(pathRoot, user_auth.User.UserName!, "Transactions");

        if (!Directory.Exists(pathUser))
        {
            Directory.CreateDirectory(pathUser);
        }

        pathUser = Path.Combine(pathUser, user_auth.Id);

        if (!Directory.Exists(pathUser))
        {
            Directory.CreateDirectory(pathUser);
        }

        string filePath = Path.Combine(pathUser, newFileName);

        proofTransactionPic = Path.Combine(pathPicsRootTransaction, newFileName);

        if (user_auth.ProofPicture != null && File.Exists(Path.Combine(pathUser, user_auth.ProofPicture)))
        {
            File.Delete(Path.Combine(pathUser, user_auth.ProofPicture));
        }

        await using FileStream fs = new(filePath, FileMode.Create);
        await e.File.OpenReadStream(maxFileSize).CopyToAsync(fs);

        using (var ctx = contextDb.CreateDbContext())
        {
            user_auth.ProofPicture = newFileName;
            user_auth.DatePayment = DateTime.Now;

            ctx.Transactions.Update(user_auth);
            await ctx.SaveChangesAsync();
        }

        Navs();
    }

    public async Task AceptForm()
    {
        using (var ctx = contextDb.CreateDbContext())
        {
            user_auth.IsPaid = true;
            user_auth.State = true;

            ctx.Transactions.Update(user_auth);
            await ctx.SaveChangesAsync();

            if (user_auth.TypeId == 1)
            {
                Transaction newShare = new Transaction();

                var nameOfMonth = user_auth.DateTransaction.AddMonths(1).ToString("MMMM", new System.Globalization.CultureInfo("pt-PT"));
                nameOfMonth = Char.ToUpper(nameOfMonth[0]) + nameOfMonth.Substring(1);

                newShare.DateTransaction = user_auth.DateTransaction.AddMonths(1);
                newShare.State = false;
                newShare.IsPaid = false;
                newShare.Amount = "12.99";
                newShare.Description = "Quota - Mes " + nameOfMonth;
                newShare.Name = "Quota - Mes " + nameOfMonth;
                newShare.Id = Guid.NewGuid().ToString();
                newShare.TypeId = 1;
                newShare.UserId = user_auth.UserId;

                await ctx.Transactions.AddAsync(newShare);
                await ctx.SaveChangesAsync();
            }
        }

        StateHasChanged();
    }
}