@page "/"
@using System.Collections
@using ACasotaBlazorServer.Data
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;
@inject IJSRuntime JSRuntime
@inject UserManager<ApplicationUser> _userManager
@inject NavigationManager nav
@inject IDbContextFactory<DataContext> contextDb
@inject IWebHostEnvironment enviroment

@attribute [Authorize]

<PageTitle>Página Principal</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-3">
            <div class="d-block my-4">
                <h2 class="h4">ACasota</h2>
                <p class="mb-0">Bemvindo á nossa associação!!</p>
            </div>
        </div>
        <button type="button" id="openSecond-modal" class="ms-2 btn large-form-btn btn-secondary" data-bs-toggle="modal" data-bs-target="#modal-achievement" hidden>OpenSecond</button>
        <!-- Modal Content -->
        <div class="modal fade" id="modal-achievement" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="modal-achievement" aria-hidden="true">
            <div class="modal-dialog modal-success modal-dialog-centered" role="document">
                <div class="modal-content">
                    <button type="button" class="btn-close theme-settings-close fs-6 ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                    <div class="modal-header mx-auto">
                    </div>
                    <div class="modal-body pt-0">
                        <div class="py-3 px-5 text-center">
                            <span class="modal-icon display-1 text-white">
                                <svg class="icon icon-xxl text-gray-200" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                    <path clip-rule="evenodd" fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"></path>
                                </svg>
                            </span>
                            <h2 class="h3 modal-title mb-3 text-white">Criou um novo reporte</h2>
                            <p class="mb-4 text-white">Aceda á página de gestão de reportes para mais informações acerca do reporte criado</p>
                        </div>
                    </div>
                    <div class="modal-footer d-flex justify-content-center pt-0 pb-3">
                        <button type="button" id="close-modal" class="ms-2 btn large-form-btn btn-secondary" data-bs-dismiss="modal">Concluir</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End of Modal Content -->
        <div class="row mb-4" id="tableWidth">
            <div class="col-12 col-xl-6">
                <div class="card shadow border-0 text-center p-0">
                    <div id="map" class="z-depth-1-half map-container rounded" style="height: 560px"></div>
                </div>
            </div>
            <div class="col-12 col-xl-6">
                <div class="card card-body border-0 shadow">
                    <div class="col-12 col-xl-12">
                        <h2 class="h5 mb-3">Formulário de reporte animal</h2>
                        <div class="form-group mb-3">
                            <label for="especie">Descrição do Reporte</label>
                            <div class="input-group">
                                <textarea @bind="@reportReg.Description" class="form-control" style="color:black;" placeholder="Descrição..." id="textarea" rows="4"></textarea>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="UserFirstName">Espécie do Animal</label>
                            <select @bind="@reportReg.AnimalRace" class="form-select mb-3" style="color:black;" id="country" aria-label="Default select example">
                                <option value="">Escolha espécie do animal</option>
                                <option value="Cao">Cão</option>
                                <option value="Gato">Gato</option>
                            </select>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserFirstName">Latitude</label>
                                    <label class="form-control" id="latLabel">Latitude da localização</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserFirstName">Longitude</label>
                                    <label class="form-control" id="lngLabel">Longitude da localização</label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserFirstName">Morada</label>
                                    <label class="form-control" id="streetLabel">Morada completa</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="UserFirstName">Cidade</label>
                                    <label class="form-control" id="cityLabel">Cidade</label>
                                </div>
                            </div>
                        </div>
                        <p class="text-danger" style="text-align: left;">@errors</p>
                        <div class="row my-1">
                            <div class="col-md-12">
                                <div class="form-group d-flex justify-content-center">
                                    <button type="button" id="bts" class="ms-2 btn large-form-btn btn-success" @onclick="GetInfo">Reportar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-sm-6 col-xl-4 mb-4">
                <div class="card border-0 shadow">
                    <div class="card-body">
                        <div class="row d-block d-xl-flex align-items-center">
                            <div class="col-12 col-xl-5 text-xl-center mb-3 mb-xl-0 d-flex align-items-center justify-content-xl-center">
                                <div class="icon-shape icon-shape-primary rounded me-4 me-sm-0">
                                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3zM6 8a2 2 0 11-4 0 2 2 0 014 0zM16 18v-3a5.972 5.972 0 00-.75-2.906A3.005 3.005 0 0119 15v3h-3zM4.75 12.094A5.973 5.973 0 004 15v3H1v-3a3 3 0 013.75-2.906z"></path></svg>
                                </div>
                            </div>
                            <div class="col-12 col-xl-7 px-xl-0">
                                <div class="d-sm-block">
                                    <h2 class="h6 text-gray-400 mb-0">Utilizadores</h2>
                                    <h3 class="fw-extrabold mb-2">@users.Count</h3>
                                </div>
                                <small class="d-flex align-items-center text-gray-500">
                                    1 Junho - 30 Junho,
                                    <svg class="icon icon-xxs text-gray-500 ms-2 me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z" clip-rule="evenodd"></path></svg>
                                    Portugal
                                </small>
                                <div class="small d-flex mt-1">
                                    <div>Desde o ultimo mês <svg class="icon icon-xs text-success" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg><span class="text-success fw-bolder">300%</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-xl-4 mb-4">
                <div class="card border-0 shadow">
                    <div class="card-body">
                        <div class="row d-block d-xl-flex align-items-center">
                            <div class="col-12 col-xl-5 text-xl-center mb-3 mb-xl-0 d-flex align-items-center justify-content-xl-center">
                                <div class="icon-shape icon-shape-secondary rounded me-4 me-sm-0">
                                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zm2 5V6a2 2 0 10-4 0v1h4zm-6 3a1 1 0 112 0 1 1 0 01-2 0zm7-1a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd"></path></svg>
                                </div>
                            </div>
                            <div class="col-12 col-xl-7 px-xl-0">
                                <div class="d-sm-block">
                                    <h2 class="h6 text-gray-400 mb-0">Doações</h2>
                                    <h3 class="fw-extrabold mb-2">€@amountTransaction</h3>
                                </div>
                                <small class="d-flex align-items-center text-gray-500">
                                    1 Junho - 30 Junho,
                                    <svg class="icon icon-xxs text-gray-500 ms-2 me-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM4.332 8.027a6.012 6.012 0 011.912-2.706C6.512 5.73 6.974 6 7.5 6A1.5 1.5 0 019 7.5V8a2 2 0 004 0 2 2 0 011.523-1.943A5.977 5.977 0 0116 10c0 .34-.028.675-.083 1H15a2 2 0 00-2 2v2.197A5.973 5.973 0 0110 16v-2a2 2 0 00-2-2 2 2 0 01-2-2 2 2 0 00-1.668-1.973z" clip-rule="evenodd"></path></svg>
                                    GER
                                </small>
                                <div class="small d-flex mt-1">
                                    <div>Desde o ultimo mês <svg class="icon icon-xs text-success" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg><span class="text-success fw-bolder">70%</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6 col-xl-4 mb-4">
                <div class="card border-0 shadow">
                    <div class="card-body">
                        <div class="row d-block d-xl-flex align-items-center">
                            <div class="col-12 col-xl-5 text-xl-center mb-3 mb-xl-0 d-flex align-items-center justify-content-xl-center">
                                <div class="icon-shape icon-shape-tertiary rounded me-4 me-sm-0">
                                    <svg class="icon" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M3 3a1 1 0 000 2v8a2 2 0 002 2h2.586l-1.293 1.293a1 1 0 101.414 1.414L10 15.414l2.293 2.293a1 1 0 001.414-1.414L12.414 15H15a2 2 0 002-2V5a1 1 0 100-2H3zm11.707 4.707a1 1 0 00-1.414-1.414L10 9.586 8.707 8.293a1 1 0 00-1.414 0l-2 2a1 1 0 101.414 1.414L8 10.414l1.293 1.293a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path></svg>
                                </div>
                            </div>
                            <div class="col-12 col-xl-7 px-xl-0">
                                <div class="d-sm-block">
                                    <h2 class="h6 text-gray-400 mb-0">Adoções</h2>
                                    <h3 class="fw-extrabold mb-2">@amountAdoption</h3>
                                </div>
                                <small class="text-gray-500">
                                    1 Junho - 30 Junho,
                                </small>
                                <div class="small d-flex mt-1">
                                    <div>Desde o ultimo mês <svg class="icon icon-xs text-success" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg><span class="text-success fw-bolder">1%</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            <div class="col-12 col-md-8 mb-4">
                <div class="card border-0 shadow">
                    @if (events.Count != 0)
                    {
                        <div class="card-header">
                            <div class="row align-items-center">
                                <div class="col">
                                    <h2 class="h5 mb-0">Os nossos eventos recentes</h2>
                                </div>
                                <div class="col text-end">
                                    <a href="/EventManagement" class="btn btn-sm btn-secondary">Ver todos</a>
                                </div>
                            </div>
                        </div>
                        <div class="table-responsive">
                            <table class="table align-items-center table-flush">
                                <thead class="thead-light">
                                    <tr>
                                        <th class="border-bottom" scope="col">Nome do Evento</th>
                                        <th class="border-bottom" scope="col">Data de Inicio</th>
                                        <th class="border-bottom" scope="col">Data Final</th>
                                        <th class="border-bottom" scope="col">Quantidade</th>
                                        <th class="border-bottom" scope="col">Estado</th>
                                        <th class="border-bottom" scope="col">Verificar</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (events.Count >= 5)
                                    {
                                        @for (int i = 0; i < 5; i++)
                                        {
                                            <tr>
                                                <th class="text-gray-900">@events[i].Name</th>
                                                <th class="text-gray-900">@events[i].InitialDate.Date.ToString("d", new System.Globalization.CultureInfo("pt-PT"))</th>
                                                <th class="text-gray-900">@events[i].EndDate.Date.ToString("d", new System.Globalization.CultureInfo("pt-PT"))</th>
                                                <th class="text-gray-900">@events[i].Count/@events[i].MaxAmount</th>
                                                @if (events[i].State == 0)
                                                {
                                                    <th class="text-gray-900 text-danger"><span class="text-danger">Cancelado</span></th>
                                                }
                                                else if (events[i].State == 1)
                                                {
                                                    <th class="text-gray-900"><span class="text-success">Aberto</span></th>
                                                }
                                                else
                                                {
                                                    <th class="text-gray-900 text-danger"><span class="text-secondary">Finalizado</span></th>
                                                }
                                                <td class="text-gray-500">
                                                    <a href="/EventForm/@events[i].Id" class="btn btn-sm btn-secondary d-inline-flex align-items-center">Inspecionar</a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        @foreach (var evt in events)
                                        {
                                            <tr>
                                                <th class="text-gray-900">@evt.Name</th>
                                                <th class="text-gray-900">@evt.InitialDate.Date.ToString("d", new System.Globalization.CultureInfo("pt-PT"))</th>
                                                <th class="text-gray-900">@evt.EndDate.Date.ToString("d", new System.Globalization.CultureInfo("pt-PT"))</th>
                                                <th class="text-gray-900">@evt.Count/@evt.MaxAmount</th>
                                                @if (evt.State == 0)
                                                {
                                                    <th class="text-gray-900 text-danger"><span class="text-danger">Cancelado</span></th>
                                                }
                                                else if (evt.State == 1)
                                                {
                                                    <th class="text-gray-900"><span class="text-success">Aberto</span></th>
                                                }
                                                else
                                                {
                                                    <th class="text-gray-900 text-danger"><span class="text-secondary">Finalizado</span></th>
                                                }
                                                <td class="text-gray-500">
                                                    <a href="/EventForm/@evt.Id" class="btn btn-sm btn-secondary d-inline-flex align-items-center">Inspecionar</a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p style="text-align: center; height: 100px; align-content: center; display: inline-grid;">Não existem eventos disponiveis!!</p>
                    }
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="card border-0 shadow">
                    @if (animals.Count != 0)
                    {
                        <div class="card-header border-bottom d-flex align-items-center justify-content-between">
                            <h2 class="h5 mb-0">As nossos animais</h2>
                            <div class="col text-end">
                                <a href="/Animalmanagement" class="btn btn-sm btn-secondary">Ver todos</a>
                            </div>
                        </div>
                        <div class="card-body">
                            <ul class="list-group list-group-flush list my--3">
                                @if (animals.Count >= 5)
                                {
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        {
                                            if (animals[i].AnimalPicture != null && File.Exists(Path.Combine(pathRoot, animals[i].Id, animals[i].AnimalPicture)))
                                            {
                                                pathPic = Path.Combine(pathPicsRoot, animals[i].Id, animals[i].AnimalPicture);
                                            }
                                            else
                                            {
                                                pathPic = "..\\assets\\img\\userDefault\\userDefault.jpg";
                                            }
                                        }
                                        <li class="list-group-item px-0">
                                            <div class="row align-items-center">
                                                <div class="col-auto">
                                                    <!-- Avatar -->
                                                    <img class="rounded avatar" alt="Image placeholder" src="@pathPic">
                                                </div>
                                                <div class="col-auto ms--2">
                                                    <h4 class="h6 mb-0">@animals[i].Name</h4>
                                                    <div class="d-flex align-items-center">
                                                        @if (animals[i].Race.Equals("Dog"))
                                                        {
                                                            <small>Cão</small>
                                                        }
                                                        else
                                                        {
                                                            <small>Gato</small>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="col text-end">
                                                    <a href="/Animal/@animals[i].Id" class="btn btn-sm btn-secondary d-inline-flex align-items-center">Inspecionar</a>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                }
                                else
                                {
                                    @foreach (var anim in animals)
                                    {
                                        {
                                            if (anim.AnimalPicture != null && File.Exists(Path.Combine(pathRoot, anim.Id, anim.AnimalPicture)))
                                            {
                                                pathPic = Path.Combine(pathPicsRoot, anim.Id, anim.AnimalPicture);
                                            }
                                            else
                                            {
                                                pathPic = "..\\assets\\img\\userDefault\\userDefault.jpg";
                                            }
                                        }
                                        <li class="list-group-item px-0">
                                            <div class="row align-items-center">
                                                <div class="col-auto">
                                                    <!-- Avatar -->
                                                    <img class="rounded avatar" alt="Image placeholder" src="@pathPic">
                                                </div>
                                                <div class="col-auto ms--2">
                                                    <h4 class="h6 mb-0">@anim.Name</h4>
                                                    <div class="d-flex align-items-center">
                                                        @if (anim.Race.Equals("Dog"))
                                                        {
                                                            <small>Cão</small>
                                                        }
                                                        else
                                                        {
                                                            <small>Gato</small>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="col text-end">
                                                    <a href="/Animal/@anim.Id" class="btn btn-sm btn-secondary d-inline-flex align-items-center">Inspecionar</a>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    }
                    else
                    {
                        <p style="text-align: center; height: 100px; align-content: center; display: inline-grid;">Não existem animais disponiveis!!</p>
                    }
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private Report reportReg { get; set; } = new Report();
    private ApplicationUser userReport = new ApplicationUser();

    private List<ApplicationUser> users = new List<ApplicationUser>();
    private List<Animal> animals = new List<Animal>();
    private List<Transaction> transactions = new List<Transaction>();
    private List<Event> events = new List<Event>();

    public double amountTransaction = 0;
    public int amountAdoption = 0;

    //variables for the animal pictures
    private string pathRoot = "";
    private string pathPicsRoot = "..\\users_pics";
    private string pathPic = "";

    //Errors when the user doesnt input all the date when creating an event
    public string errors { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        pathRoot = Path.Combine(enviroment.ContentRootPath, "wwwroot", "users_pics");

        var authState = await AuthenticationStateTask;
        var user = authState.User;
        using (var ctx = contextDb.CreateDbContext())
        {
            userReport = await ctx.Users.SingleAsync(u => u.UserName.Equals(user.Identity.Name));
            reportReg.UserId = userReport.Id;

            users = await ctx.Users.ToListAsync();
            animals = await ctx.Animals.ToListAsync();
            transactions = await ctx.Transactions.ToListAsync();
            events = await ctx.Events.ToListAsync();
        }

        foreach (var trs in transactions)
        {
            if (trs.TypeId == 2 && trs.IsPaid)
            {
                amountTransaction += Convert.ToDouble(trs.Amount);
            }
        }

        foreach (var animal in animals.ToList())
        {
            if (animal.UserId != null)
            {
                amountAdoption += 1;
                animals.Remove(animal);
            }
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initMap");
        }
    }

    public async void GetInfo()
    {
        reportReg.Latitude = await JSRuntime.InvokeAsync<string>("GetInfoReportLatitude");
        reportReg.Longitude = await JSRuntime.InvokeAsync<string>("GetInfoReportLongitude");
        reportReg.City = await JSRuntime.InvokeAsync<string>("GetInfoReportCity");
        reportReg.Street = await JSRuntime.InvokeAsync<string>("GetInfoReportStreet");

        await CreateReport();
    }

    public void GetDown()
    {
        JSRuntime.InvokeVoidAsync("UpModal");
    }

    public void RemoveMarker()
    {
        JSRuntime.InvokeVoidAsync("removeEverything");
    }

    public void Navs()
    {
        nav.NavigateTo("/", true);
    }

    public async Task CreateReport()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (reportReg.City.Equals("Cidade"))
        {
            errors = "Utilize o mapa para escolher a localização do animal";
            StateHasChanged();
            return;
        }
        else if (reportReg.AnimalRace.Equals(""))
        {
            errors = "Escolha a espécie do animal";
            StateHasChanged();
            return;
        }

        reportReg.Id = Guid.NewGuid().ToString();
        reportReg.State = false;
        reportReg.DateCreated = DateTime.Now;

        using (var ctx = contextDb.CreateDbContext())
        {
            try
            {
                await ctx.Reports.AddAsync(reportReg);
                await ctx.SaveChangesAsync();
            }
            catch (Exception e)
            {
                return;
            }
        }

        errors = "";
        reportReg.AnimalRace = "";
        reportReg.Latitude = "";
        reportReg.Longitude = "";
        reportReg.Street = "";
        reportReg.City = "";

        RemoveMarker();
        GetDown();
        StateHasChanged();
    }
}