@page "/Animalmanagement"
@using System.Collections
@using ACasotaBlazorServer.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject NavigationManager nav
@inject IWebHostEnvironment enviroment
@inject IDbContextFactory<DataContext> contextDb
@inject IJSRuntime JSRuntime

@attribute [Authorize]

<PageTitle>Gestão de Animais</PageTitle>

<AuthorizeView>
    <Authorized>
        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center py-4">
            <div class="d-block mb-4 mb-md-0">
                <nav aria-label="breadcrumb" class="d-none d-md-inline-block">
                    <ol class="breadcrumb breadcrumb-dark breadcrumb-transparent">
                        <li class="breadcrumb-item">
                            <a href="/">
                                <svg class="icon icon-xxs" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path></svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item"><a href="/">ACasota</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Animais</li>
                    </ol>
                </nav>
                <h2 class="h4">Os nossos Animais</h2>
                <p class="mb-0">Todos os animais precisam de uma casa, adota um!!</p>
            </div>
        </div>
        <div class="table-settings mb-4">
            <div class="row align-items-center justify-content-between">
                <div class="col col-md-6 col-lg-3 col-xl-4">
                    <div class="input-group me-2 me-lg-3 fmxw-400">
                        <span class="input-group-text">
                            <svg class="icon icon-xs" x-description="Heroicon name: solid/search" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                            </svg>
                        </span>
                        <input type="text" @bind="@searchWord" @oninput="@Search" class="form-control" placeholder="Procurar Animal">
                    </div>
                </div>
                @if (isAdmin)
                {
                    <div class="col-4 col-md-3 col-xl-2 ps-md-0 text-end">
                        <button type="button" class="btn btn-sm btn-gray-800 d-inline-flex align-items-center me-2" data-bs-toggle="modal" data-bs-target="#modal-form-signup">Registar Animal</button>
                    </div>
                    <button type="button" id="openSecond-modal" class="ms-2 btn large-form-btn btn-secondary" data-bs-toggle="modal" data-bs-target="#modal-achievement" hidden>OpenSecond</button>
                    <!-- Modal Content -->
                    <div class="modal fade" id="modal-form-signup" tabindex="-1" role="dialog" aria-labelledby="modal-form-signup" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-body p-0">
                                    <div class="card p-3 p-lg-4">
                                        <button type="button" class="btn-close ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                                        <div class="text-center text-md-center mb-4 mt-md-0">
                                            <h1 class="mb-0 h4">Novo registo Animal</h1>
                                        </div>
                                        <!-- Form -->
                                        <div class="form-group mb-4">
                                            <label for="nome">Nome do Animal</label>
                                            <div class="input-group">
                                                <input type="text" @bind="@animalReg.Name" @bind:event="oninput" class="form-control" placeholder="Nome do animal" id="nome" autofocus required>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-6">
                                                <div class="form-group" style="text-align:left;">
                                                    <label>Espécie do Animal</label>
                                                    <div class="d-flex mb-3 justify-content-center">
                                                        <select @bind="@animalReg.Race" class="form-select" style="color:black;" id="habitacao" aria-label="Default select example">
                                                            <option value="">Escolha a espécie</option>
                                                            <option value="Cao">Cão</option>
                                                            <option value="Gato">Gato</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="form-group" style="text-align:left;">
                                                    <label>Género do Animal</label>
                                                    <div class="d-flex mb-3 justify-content-center">
                                                        <select @bind="@animalReg.Sex" class="form-select" style="color:black;" id="country" aria-label="Default select example">
                                                            <option value="">Escolha o género</option>
                                                            <option value="Feminino">Feminino</option>
                                                            <option value="Masculino">Masculino</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-6">
                                                <div class="form-group" style="text-align:left;">
                                                    <label>Tamanho do Animal</label>
                                                    <div class="d-flex mb-3 justify-content-center">
                                                        <select @bind="@animalReg.Size" class="form-select" style="color:black;" id="habitacao" aria-label="Default select example">
                                                            <option value="">Escolha o tamanho</option>
                                                            <option value="Pequeno">Pequeno</option>
                                                            <option value="Medio">Médio</option>
                                                            <option value="Grande">Grande</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="form-group" style="text-align:left;">
                                                    <label>Idade do Animal</label>
                                                    <div class="d-flex mb-3 justify-content-center">
                                                        <select @bind="@animalReg.Age" class="form-select" style="color:black;" id="country" aria-label="Default select example">
                                                            <option value="">Escolha a idade</option>
                                                            <option value="Bebe">Bebe</option>
                                                            <option value="Junior">Junior</option>
                                                            <option value="Adulto">Adulto</option>
                                                            <option value="Senior">Sénior</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <div class="col-6">
                                                <div class="form-group">
                                                    <label>Está esterelizado?</label>
                                                    <div class="d-flex mb-3">
                                                        <!-- Radio -->
                                                        <InputRadioGroup Name="IsSterile" @bind-Value="@animalReg.IsSterile">
                                                            <div class="form-check me-3">
                                                                <InputRadio Name="IsSterile" class="form-check-input" Value="@true" />Sim<br>
                                                            </div>
                                                            <div class="form-check">
                                                                <InputRadio Name="IsSterile" class="form-check-input" Value="@false" />Não<br>
                                                            </div>
                                                        </InputRadioGroup>
                                                        <!-- End of Radio -->
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-6">
                                                <div class="form-group">
                                                    <label>Está vacinado?</label>
                                                    <div class="d-flex mb-3">
                                                        <!-- Radio -->
                                                        <InputRadioGroup Name="IsVacinated" @bind-Value="@animalReg.IsVacinated">
                                                            <div class="form-check me-3">
                                                                <InputRadio Name="IsVacinated" class="form-check-input" Value="@true" />Sim<br>
                                                            </div>
                                                            <div class="form-check">
                                                                <InputRadio Name="IsVacinated" class="form-check-input" Value="@false" />Não<br>
                                                            </div>
                                                        </InputRadioGroup>
                                                        <!-- End of Radio -->
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- End of Form -->
                                        <p class="text-danger" style="text-align: left;">@errors</p>
                                        <div class="d-grid mb-4">
                                            <button type="button" class="btn btn-secondary" @onclick="CreateAnimal">Registar Animal</button>
                                            <button type="button" id="close-modal" class="ms-2 btn large-form-btn btn-secondary" data-bs-dismiss="modal" hidden>Close</button>
                                        </div>
                                        <div class="text-center text-md-center mb-4 mt-md-0">
                                            <p class="text-gray">Após preenchimento do formulário e registo será necessário a atribuição das imágens do animal!!</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End of Modal Content -->
                    <!-- Modal Content -->
                    <div class="modal fade" id="modal-achievement" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="modal-achievement" aria-hidden="true">
                        <div class="modal-dialog modal-success modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <button type="button" class="btn-close theme-settings-close fs-6 ms-auto" data-bs-dismiss="modal" aria-label="Close"></button>
                                <div class="modal-header mx-auto">
                                </div>
                                <div class="modal-body pt-0">
                                    <div class="py-3 px-5 text-center">
                                        <span class="modal-icon display-1 text-white">
                                            <svg class="icon icon-xxl text-gray-200" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
                                                <path clip-rule="evenodd" fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"></path>
                                            </svg>
                                        </span>
                                        <h2 class="h3 modal-title mb-3 text-white">Um novo animal foi criado!!</h2>
                                        <p class="mb-4 text-white">Processo de criação de animal completo com sucesso, volte para a página de Gestão Animal</p>
                                    </div>
                                </div>
                                <div class="modal-footer d-flex justify-content-center pt-0 pb-3">
                                    <button type="button" id="bts" class="ms-2 btn large-form-btn btn-secondary" data-bs-dismiss="modal" @onclick="Navs">Finalizar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End of Modal Content -->
                }
            </div>
        </div>
        <div class="card card-body border-0 shadow table-wrapper table-responsive">
            <div class="row">
                @if (usersShow.Count == 0)
                {
                    <p style="text-align: center; height: 100px; align-content: center; display: inline-grid;">Não existem animais disponiveis!!</p>
                }
                else
                {
                    @foreach (var userDb in usersShow)
                    {
                        {
                            if (userDb.AnimalPicture != null && File.Exists(Path.Combine(pathRoot, userDb.Id, userDb.AnimalPicture)))
                            {
                                pathPic = Path.Combine(pathPicsRoot, userDb.Id, userDb.AnimalPicture);
                            }
                            else
                            {
                                pathPic = "..\\assets\\img\\userDefault\\userDefault.jpg";
                            }
                        }

                        <div class="col-sm-3" style="margin-bottom:1rem">
                            <a href="/Animal/@userDb.Id">
                                <div class="card">
                                    <img class="card-img-top" src="@pathPic" alt="Card image cap">
                                    <div class="card-body">
                                        @if (isAdmin)
                                        {
                                            @if (userDb.UserId != null)
                                            {
                                                <p class="text-danger" style="font-size:smaller">Adotado</p>
                                            }
                                        }
                                        <h5 class="card-title">@userDb.Name</h5>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                }
            </div>
        </div>
        @if (numberPages > 1)
        {
            <div class="card-footer px-3 border-0 d-flex flex-column flex-lg-row align-items-center justify-content-between">
                <nav aria-label="Page navigation example">
                    <ul class="pagination mb-0">
                        <li class="page-item">
                            <a class="page-link" @onclick="() => ChargeViewArray(numberPageActive - 1)">Previous</a>
                        </li>
                        @foreach (var pageView in pageSelection)
                        {
                            if (pageView == numberPageActive)
                            {
                                <li class="page-item active">
                                    <a class="page-link" @onclick="() => ChargeViewArray(pageView)">@pageView</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link" @onclick="() => ChargeViewArray(pageView)">@pageView</a>
                                </li>
                            }
                        }
                        <li class="page-item">
                            <a class="page-link" @onclick="() => ChargeViewArray(numberPageActive + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
                <div class="fw-normal small mt-4 mt-lg-0">Showing <b>@startIndex</b> to <b>@endIndex</b> out of <b>@numberEntries</b> entries</div>
            </div>
        }
        else
        {
            <div class="card-footer px-3 border-0 d-flex flex-column flex-lg-row align-items-center justify-content-right">
                <div class="fw-normal small mt-4 mt-lg-0">Showing <b>@startIndex</b> to <b>@endIndex</b> out of <b>@numberEntries</b> entries</div>
            </div>
        }
        <footer class="bg-white rounded shadow p-5 mb-4 mt-4">
            <div class="row">
                <div class="col-12 col-md-4 col-xl-6 mb-4 mb-md-0">
                    <p class="mb-0 text-center text-lg-start">© 2023<span class="current-year"></span> <a class="text-primary fw-normal" href="https://themesberg.com" target="_blank">ACasota</a></p>
                </div>
                <div class="col-12 col-md-8 col-xl-6 text-center text-lg-start">
                    <!-- List -->
                    <ul class="list-inline list-group-flush list-group-borderless text-md-end mb-0">
                        <li class="list-inline-item px-0 px-sm-2">
                            <a href="https://themesberg.com/about">Instagram</a>
                        </li>
                        <li class="list-inline-item px-0 px-sm-2">
                            <a href="https://themesberg.com/themes">Twitter</a>
                        </li>
                        <li class="list-inline-item px-0 px-sm-2">
                            <a href="https://themesberg.com/blog">Facebook</a>
                        </li>
                    </ul>
                </div>
            </div>
        </footer>
    </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }
    public List<Animal> usersShow { get; set; } = new List<Animal>();
    public List<Animal> users { get; set; } = new List<Animal>();
    public List<Animal> userDB { get; set; } = new List<Animal>();

    //New animal that is being created
    private Animal animalReg { get; set; } = new Animal();

    //Errors when the user doesnt input all the date when creating an animal
    public string errors { get; set; } = "";

    //Checks if user is admin so he can register a new animal
    private bool isAdmin = true;

    //variables for the animal pictures
    private string pathRoot = "";
    private string pathPicsRoot = "..\\users_pics";
    private string pathPic = "";

    //Sets a list for the number of pages, set automatically
    public List<Int32> pageSelection { get; set; } = new List<Int32>();

    //Sets the number of entries per page for the table
    public int numberEntriesPerPage { get; set; } = 8;
    //Sets the total amount of entries, set automatically
    public int numberEntries { get; set; }
    //Sets the total amount of pages needed, set automatically
    public int numberPages { get; set; }
    //Sets the page active at the moment, set automatically
    public int numberPageActive { get; set; }

    //Sets the indexes for the pages, set automatically
    public int startIndex { get; set; }
    public int endIndex { get; set; }

    //This is the proprietie that will be used to search a user
    public string searchWord { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        pathRoot = Path.Combine(enviroment.ContentRootPath, "wwwroot", "users_pics");

        var authState = await AuthenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            using (var ctx = contextDb.CreateDbContext())
            {
                var usersCT = await ctx.Animals.ToArrayAsync();

                if (user.IsInRole("Admin") || user.IsInRole("AdminPartner"))
                {
                    foreach (var userct in usersCT)
                    {
                        userDB.Add(userct);
                    }
                }
                else
                {
                    isAdmin = false;

                    foreach (var userct in usersCT)
                    {
                        if (userct.UserId == null || userct.UserId == "")
                        {
                            userDB.Add(userct);
                        }
                    }
                }
            }

            userFill();

            //Sets number of total entries
            numberEntries = users.Count;

            //Sets the total amount of pages needed
            numberPages = numberEntries / numberEntriesPerPage;
            if ((numberEntries % numberEntriesPerPage) != 0 && numberPages > 0)
            {
                numberPages++;
            }

            if (numberPages == 0)
            {
                foreach (var userInDb in users)
                {
                    usersShow.Add(userInDb);
                }

                if (numberEntries == 0)
                {
                    startIndex = 0;
                }
                else
                {
                    startIndex = 1;
                }

                endIndex = numberEntries;
            }
            else
            {
                for (var x = 1; x <= numberPages; x++)
                {
                    pageSelection.Add(x);
                }

                numberPageActive = 1;

                ChargeViewArray(1);
            }
        }
    }

    public void ChargeViewArray(int numberPage)
    {
        if (numberPage < 1 || numberPage > numberPages)
        {
            return;
        }
        else if (numberPage == 1)
        {
            usersShow.Clear();

            startIndex = 1;
            endIndex = numberEntriesPerPage;

            for (var numberOfUser = 0; numberOfUser < numberEntriesPerPage; numberOfUser++)
            {
                usersShow.Add(users[numberOfUser]);
            }

            numberPageActive = 1;

            return;
        }
        else if (numberPage > numberPageActive)
        {
            var numSpaces = numberEntriesPerPage * (numberPage - numberPageActive);

            startIndex += numSpaces;
            endIndex += numSpaces;

            if (endIndex > users.Count)
            {
                endIndex = numberEntries;
            }
        }
        else if (numberPage < numberPageActive)
        {
            var numSpaces = numberEntriesPerPage * (numberPageActive - numberPage);

            startIndex -= numSpaces;
            endIndex -= numSpaces;
        }

        numberPageActive = numberPage;

        usersShow.Clear();

        var currentIndex = startIndex - 1;

        for (var numberOfUser = 0; numberOfUser < numberEntriesPerPage; numberOfUser++)
        {
            if (currentIndex >= users.Count || currentIndex < 0)
            {
                break;
            }

            usersShow.Add(users[currentIndex]);

            currentIndex++;
        }
    }

    public void Search(ChangeEventArgs e)
    {
        searchWord = e.Value.ToString();

        userFill();

        //Sets number of total entries
        numberEntries = users.Count;

        //Sets the total amount of pages needed
        numberPages = numberEntries / numberEntriesPerPage;
        if ((numberEntries % numberEntriesPerPage) != 0 && numberPages > 0)
        {
            numberPages++;
        }

        if (numberPages == 0)
        {
            foreach (var userInDb in users)
            {
                usersShow.Add(userInDb);
            }

            startIndex = 1;
            endIndex = numberEntries;
        }
        else
        {
            pageSelection.Clear();

            for (var x = 1; x <= numberPages; x++)
            {
                pageSelection.Add(x);
            }

            numberPageActive = 1;

            ChargeViewArray(1);
        }
    }

    public void userFill()
    {
        users.Clear();
        usersShow.Clear();

        if (searchWord == "")
        {
            users.AddRange(userDB);
        }
        else
        {
            foreach (var u in userDB)
            {
                var nameLower = u.Name.ToLower();
                var searchLower = searchWord.ToLower();

                if (nameLower.Contains(searchLower))
                {
                    users.Add(u);
                }
            }
        }
    }

    public void GetDown()
    {
        JSRuntime.InvokeVoidAsync("DownModal");
    }

    public void Navs()
    {
        nav.NavigateTo("/Animalmanagement", true);
    }

    public async Task CreateAnimal()
    {
        animalReg.Id = Guid.NewGuid().ToString();

        using (var ctx = contextDb.CreateDbContext())
        {
            try
            {
                await ctx.Animals.AddAsync(animalReg);
                await ctx.SaveChangesAsync();
            }
            catch
            {
                errors = "Preencha todos as caractristicas do animal!!";
                return;
            }

            GetDown();
        }
    }
}
